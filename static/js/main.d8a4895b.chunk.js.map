{"version":3,"sources":["BooksAPI.js","components/bookList.js","components/shelf.js","pages/mainPage.js","pages/searchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","BookList","props","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","event","value","target","onShelfUpdate","updateSelection","defaultValue","disabled","title","authors","Shelf","category","map","MainPage","bookshelf","to","SearchPage","searchedBooks","onSearchBook","onResetSearch","filteredBooks","sbook","filteredBookList","length","onClick","type","placeholder","App","state","updateShelf","BooksAPI","setState","currentBooks","filter","bk","concat","catch","err","searchBook","debounce","searchValue","trim","resetSearch","NoMatch","location","color","pathname","error","exact","path","render","history","component","this","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8a4895b.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'; \r\n\r\nconst BookList = (props) => {\r\n    const {book} = props;\r\n\r\n    const updateSelection = (book, shelf) => (\r\n        props.onShelfUpdate(book, shelf)\r\n    );\r\n\r\n    const handleSelection = (event) => {\r\n        const {value} = event.target;\r\n        updateSelection(book, value)\r\n    };\r\n\r\n    return(\r\n        <li>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks && book.imageLinks.thumbnail})` }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                    <select onChange={handleSelection} value={book.shelf} defaultValue='none'>\r\n                        <option value=\"move\" disabled>Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                    </select>\r\n                </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                <div className=\"book-authors\">{book.authors}</div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default BookList;","import React from 'react';\r\nimport BookList from './bookList';\r\n\r\nconst Shelf = (props) => {\r\n    const {books, title, category, onShelfUpdate} = props;\r\n    return(\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {books.map(book => (\r\n                        book.shelf === category \r\n                        && <BookList \r\n                                key={book.id} \r\n                                book={book}\r\n                                onShelfUpdate={onShelfUpdate}\r\n                            /> \r\n                     ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shelf;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Shelf from '../components/shelf';\r\n\r\nconst MainPage = (props) => {\r\n  const {books, onShelfUpdate} = props;\r\n\r\n  const shelves = [\r\n    { title: 'Currently Reading', category: 'currentlyReading' },\r\n    { title: 'Want To Read', category: 'wantToRead' },\r\n    { title: 'Read', category: 'read' },\r\n  ];\r\n\r\n  const bookshelf = shelves.map(shelf => \r\n  <Shelf\r\n    key={shelf.category}\r\n    category={shelf.category}\r\n    title={shelf.title}\r\n    books={books}\r\n    onShelfUpdate={onShelfUpdate}\r\n  />);\r\n\r\n    return(\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            {bookshelf}\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <span> Add a book</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BookList from '../components/bookList';\r\n\r\nconst SearchPage = (props) => {\r\n    const {books, searchedBooks, onSearchBook, onResetSearch} = props;\r\n\r\n    const handleFilterText = event => (\r\n        onSearchBook(event.target.value)\r\n    )\r\n\r\n    const filteredBooks = searchedBooks.map(sbook => {\r\n        books.map(book => {\r\n            if (sbook.id === book.id) {\r\n                sbook.shelf = book.shelf\r\n            }\r\n            return book;\r\n        })\r\n        return sbook;\r\n    });\r\n\r\n    const filteredBookList = \r\n        filteredBooks.length > 0 \r\n            ? filteredBooks.map(book => \r\n                <BookList \r\n                    key={book.id} \r\n                    book={book}\r\n                    onShelfUpdate={props.onShelfUpdate}                       \r\n                />)\r\n            : <p>No book to display</p> \r\n\r\n    return(\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n                    <span className=\"close-search\" onClick={onResetSearch}>Close</span>\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Search by title or author\"\r\n                        onChange={handleFilterText}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                  {filteredBookList}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { debounce } from 'throttle-debounce';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css'\r\nimport MainPage from './pages/mainPage'\r\nimport SearchPage from './pages/searchPage'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    books: [],\r\n    searchedBooks: [],\r\n  };\r\n\r\n  componentDidMount(){\r\n    BooksAPI.getAll()\r\n    .then((books) => {\r\n      this.setState(() => ({\r\n        books: books\r\n      }));\r\n    })\r\n    .catch(error => error)\r\n  };\r\n\r\n  updateShelf = (book, shelf) => {\r\n      BooksAPI.update(book, shelf).then(res => {\r\n        if (shelf === 'none') {\r\n          book.shelf = shelf;\r\n          this.setState((currentBooks) => ({\r\n            books: currentBooks.books.filter(bk => bk.id !== book.id) \r\n          }));\r\n        } else{\r\n          book.shelf = shelf;\r\n          this.setState((currentBooks) => ({\r\n            books: currentBooks.books.filter(bk => bk.id !== book.id).concat(book) \r\n          }));\r\n        }\r\n      })\r\n      .catch(err => err)\r\n  };\r\n\r\n  searchBook = debounce(500, false, (searchValue) => {\r\n    if (searchValue.trim().length > 0 ) {\r\n      BooksAPI.search(searchValue)\r\n      .then((searchedBooks) =>{\r\n        searchedBooks.length > 0 \r\n        ? this.setState({ searchedBooks: searchedBooks })\r\n        : this.setState({ searchedBooks: [] }); \r\n    })  \r\n    } else this.setState({ searchedBooks: [] });   \r\n  });\r\n\r\n  resetSearch = () => {\r\n    this.setState({ searchedBooks: [] });\r\n  };\r\n\r\n  NoMatch = ({ location }) => {\r\n    return(\r\n      <div>\r\n          <h3>No match for the path: <code style={{color: \"purple\"}}>{location.pathname}</code></h3>\r\n          <Link to=\"/\"><h3>Go Back Home</h3></Link>\r\n      </div>\r\n  );\r\n  };\r\n\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => (\r\n              <MainPage \r\n                books={this.state.books}\r\n                onShelfUpdate={this.updateShelf}\r\n              />\r\n            )} \r\n            />\r\n            <Route path=\"/search\" render={({history}) => (\r\n              <SearchPage \r\n                onShelfUpdate={this.updateShelf}\r\n                onSearchBook={this.searchBook}\r\n                searchedBooks={this.state.searchedBooks}\r\n                books={this.state.books}\r\n                onResetSearch={this.resetSearch}\r\n              />\r\n              )} \r\n            />\r\n            <Route component={this.NoMatch} />\r\n          </Switch>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\ndocument.getElementById('root'))\r\n"],"sourceRoot":""}